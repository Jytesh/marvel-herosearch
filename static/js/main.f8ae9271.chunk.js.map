{"version":3,"sources":["api.js","Components/Character.js","Components/returnButton.js","index.js"],"names":["fetch","require","fetchCharacter","value","a","Promise","resp","rej","then","res","text","data","JSON","parse","catch","this","CharacterCarousel","props","children","map","x","i","console","log","slickConfig","dots","infinite","autoplay","variableWidth","adaptiveHeight","accessibility","arrows","draggable","className","React","Component","Character","thumb","urls","dat","forEach","url","push","alt","src","thumbnail","path","extension","name","description","Button","replace","type","href","returnButton","onclick","parent","setState","input","render","onClick","Input","search","el","document","getElementById","state","marvelAPI","renderError","response","total","charData","results","err","error","id","ReactDOM","title"],"mappings":"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","file":"static/js/main.f8ae9271.chunk.js","sourcesContent":["const fetch = require('node-fetch')\n\nclass marvelAPI {\n    constructor() {\n        return this;\n    }\n    fetchCharacter = async(value) => {\n        return (this.fetch(`characters?nameStartsWith=${value}`))\n    }\n    fetch = async(value) => {\n        return new Promise((resp,rej) => {\n            fetch(`https://gateway.marvel.com:443/v1/public/${value}&apikey=837ec1513993ed3b2fe176cf44496148`, {\n                \"headers\": {\n                    \"accept\": \"application/json\",\n                    \"accept-language\": \"en-GB,en-US;q=0.9,en;q=0.8\",\n                    \"if-none-match\": \"e614cead3c695aa98627932bd5c4d430b19c2aa2\",\n                    \"sec-fetch-dest\": \"empty\",\n                    \"sec-fetch-mode\": \"cors\",\n                    \"sec-fetch-site\": \"same-site\",\n                    \"sec-gpc\": \"1\",\n                    \"origin\": \"https://developer.marvel.com\"\n                },\n                \"referrer\": \"https://developer.marvel.com/\",\n                \"referrerPolicy\": \"strict-origin-when-cross-origin\",\n                \"body\": null,\n                \"method\": \"GET\",\n                \"mode\": \"cors\",\n                \"credentials\": \"omit\"\n                })\n                .then(async (res) => {\n                    const text = await res.text()\n                    const data = JSON.parse(text);\n                    return resp(data)\n                }).catch(rej)\n        })\n    }\n}\n\nexport default (new marvelAPI());","import React from 'react';\nimport Slider from 'react-slick';\nimport 'slick-carousel/slick/slick.css';\nimport 'slick-carousel/slick/slick-theme.css';\nconst parseThumb = (thumb) => `${thumb.path}.${thumb.extension}`\n\nclass CharacterCarousel extends React.Component {\n  constructor(props) {\n    super(props);\n    this.children = props.data.map( (x,i) => <div key={i}><Character data={x}/></div>);\n    console.log(this.children)\n    this.slickConfig = {\n      dots: true,\n      infinite: true,\n      autoplay: true,\n      variableWidth: true,\n      adaptiveHeight: true,\n      accessibility: true,\n      arrows: true,\n      draggable: true,\n    };\n  }\n  render(){\n    return (\n      <div className=\"Carousel\">\n        <Slider {...this.slickConfig}>\n          {this.children}\n        </Slider>\n      </div>)\n  }\n}\nclass Character extends React.Component {\n    render() {\n      return (\n        <div className=\"character\">\n          <div className=\"characterContainer\">\n            {\n              (() => {\n                if (this.props.data.urls){\n                    let dat = []\n                    this.props.data.urls.forEach( (url,i) => {\n                      dat.push(<Button data={url} key={i}/>);\n                    })\n                    return <div>{dat}</div>;\n                  }\n                return ''\n                } \n              )()\n            }\n            <img alt=\"meme\" src= {parseThumb(this.props.data.thumbnail)}></img>\n            <h1> {this.props.data.name} </h1>\n            <p> {this.props.data.description} </p>\n          </div>\n        </div>\n      );\n    }\n  }\n//detail\n// wiki\n// comiclink\n//\nclass Button extends React.Component {\n  constructor(props){\n    super(props)\n    let replace = '';\n    switch (props.data.type) {\n      case 'detail': {\n        replace = 'Read Details';\n        break;\n      }\n      case 'wiki': {\n        replace = 'Read Wiki';\n        break;\n      }\n      case 'comiclink': {\n        replace = 'Read Comics';\n        break;\n      }\n      default: {\n        replace = 'Read'\n      }\n    };\n    this.data = props.data;\n    this.replace = replace;\n  }\n  render() {\n    if (this.data) return <div className=\"button\"><a href={this.data.url}><div className=\"innerFill \"><span>{this.replace}</span></div></a></div>;\n    else return <div></div>\n  }\n}\nexport default CharacterCarousel;","import React from 'react';\n\nclass returnButton extends React.Component {\n    constructor(props) {\n        super(props);\n        console.log(props);\n        this.parent = props.parent;\n    }\n    onclick = () => {\n        this.parent.setState({input: null})\n    }\n    render = () => {\n        return (\n            <button onClick={this.onclick}> Return </button>\n        )\n    }\n}\n\nexport default returnButton;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport marvelAPI from './api';\n\nimport CharacterCarousel from './Components/Character';\nimport GithubBadge from 'react-github-corner'\nimport ReturnButton from './Components/returnButton';\n\nclass Input extends React.Component {\n  constructor(){\n    super()\n    this.state = {\n      input: '',\n      charData: null\n    }\n  }\n  search  = async() => {\n    console.log('meme')\n    const el = document.getElementById('heroQuery');\n    this.state.input = el;\n    const response = await marvelAPI.fetchCharacter(el.value).catch(this.renderError);\n    if (response.data.total) {\n      this.setState({ charData: response.data.results})\n    } else {\n      this.renderError('No character found!') \n    }\n  }\n  render() {\n    if (!this.state.input) \n      return (\n        <div id=\"mainInput\">\n          <div>\n            <input type=\"text\" id=\"heroQuery\"></input>\n            <button id=\"Search\" onClick={this.search}>Search</button>\n          </div>\n        </div>\n        )\n    else if (this.state.charData) {\n      return (\n        <div className=\"carouselContainer\">\n          <CharacterCarousel data={this.state.charData}/>\n          <ReturnButton parent={this}/>\n        </div>\n      )\n    }\n  }\n  renderError = async(err) => {\n    console.error(err)\n  }\n}\nReactDOM.render(<Input />, document.getElementById('root'));\nReactDOM.render((\n  <GithubBadge \n  title= \"View the repo on GitHub\"\n  href=\"https://github.com/Jytesh/marvel-herosearch\"/>), document.getElementById(\"badge\"))"],"sourceRoot":""}